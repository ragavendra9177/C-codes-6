#include <iostream>
using namespace std;

struct node {
    int data;
    struct node* next;
};

void FrontBackSplit2(struct node* source, struct node** frontRef, struct node** backRef) {
    struct node* fast;
    struct node* slow;
    if (source == NULL || source->next == NULL) {
        *frontRef = source;
        *backRef = NULL;
    } else {
        slow = source;
        fast = source->next;
        
        while (fast != NULL) {
            fast = fast->next;
            if (fast != NULL) {
                slow = slow->next;
                fast = fast->next;
            }
        }

        *frontRef = source;
        *backRef = slow->next;
        slow->next = NULL;
    }
}

void push(struct node** headRef, int newData) {
    struct node* newNode = new node();
    newNode->data = newData;
    newNode->next = *headRef;
    *headRef = newNode;
}

void printList(struct node* node) {
    while (node != NULL) {
        cout << node->data << " ";
        node = node->next;
    }
    cout << endl;
}

int main() {
    struct node* source = NULL;
    struct node* front = NULL;
    struct node* back = NULL;

    push(&source, 11);
    push(&source, 7);
    push(&source, 5);
    push(&source, 3);
    push(&source, 2);

    cout << "Original list: ";
    printList(source);

    FrontBackSplit2(source, &front, &back);

    cout << "Front list after split: ";
    printList(front);
    cout << "Back list after split: ";
    printList(back);

    return 0;
}
